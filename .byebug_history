c
Filters::TitleLengthFilter.call(entries, :>, 5).order_by(:n_of_comments)
a = Filters::TitleLengthFilter.call(entries, :>, 5)
Filters::TitleLengthFilter.call(entries, :>, 5)
c
expected_result
c
n
c
filter_program(filter_choice, entries)
c
pp entries
entries
entrie
c
result
c
n
result
c
entries
c
ENTRIES_JSON
JSON.parse(entries)
entries
result
entries.to_json
entries
entrie
c
 apply_filters(scraper)
choice
c
comments = subtext.css('a').last.text.to_i # Assumes the last <a> tag contains the comm
 points = subtext.css('span.score').text.to_i # Converts '195 points' to 195
subtext = indexed_row.next_element
subtext = athing.following_sibling.css('td.subtext')
indexed_row.css('span.subline)
indexed_row.css('span.subline')
indexed_row.css('span.subline').text
indexed_row.css('span.subline')
indexed_row.css('tr')
indexed_row.css('subtext')
indexed_row.css('td.subtext')
indexed_row.css('td.subtext)
indexed_row.css('tr > td.subtext > a')
indexed_row.css('tr.subtext > a')
indexed_row.css('td.subtext > a')
indexed_row.css('td.subtext > a').last
indexed_row.css('td.subtext > a').last.text.to_i
indexed_row.css('span.titleline > a').text
indexed_row.css('span.titleline')
indexed_row.css('span.titleline').html
indexed_row.css('span.titleline').text
c
indexed_row.css('span').text
indexed_row.css('span.title').text
c
title = indexed_row.css('span.title')
indexed_row.css('span.titleline').text
title = indexed_row.css('title')
title = indexed_row.css('span.title')
title = indexed_row.css('span.title').text
title = indexed_row.css('td.title').text
title = indexed_row.css('span.title').text
indexed_row.css('span.rank').text.gsub('.', '').to_i
cleaned_text = indexed_row.text.strip.gsub(/\s+/, ' ')
indexed_row.text
indexed_row
indexed_row.text
indexed_row.text.trim
indexed_row.text
anchor = indexed_row.css('span.titleline > a').first
href = anchor.attribute('href').value if anchor
indexed_row.css('span.titleline').attribute('href')
indexed_row.css('span.titleline').attribute
indexed_row.css('span.titleline').attributes
indexed_row.css('span.titleline')
indexed_row.css('a').text
indexed_row.css('a').html
indexed_row.css('a')
indexed_row.css(a)
indexed_row.css('span').text
indexed_row.css('span.titleline').text
indexed_row.css('span').text
indexed_row.css('span.title').text
title
n
indexed_row
c
document.css('tr.athing')
document.css('tr.athing').size
document.css('tr').size
document.css('tr')
document.css('table')
document.css('body')
document.css
document
n
Scraper.parse_html(html)
document.css
c
n
