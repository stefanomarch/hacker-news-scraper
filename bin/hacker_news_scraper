#!/usr/bin/env ruby
# frozen_string_literal: true

require_relative '../lib/hacker_news_scraper'
require_relative '../lib/filters/title_length_filter'
require 'byebug'

# ------------- user input methods -------------
def main_menu
  puts 'HackerNews Scraper'
  puts '1. Scrape without filters'
  puts '2. Apply filters'
  puts '3. Exit'
  print 'Enter your choice: '
  gets.chomp.to_i
end

def filters_menu
  puts 'Filter Options:'
  puts '1. Filter entries with more than five words in the title ordered by the number of comments first.'
  puts '2. Filter entries with less than or equal to five words in the title ordered by points'
  puts '3. Exit'
  gets.chomp.to_i
end

def filter_program(filter_choice, entries)
  loop do
    case filter_choice
    when 1
      return Filters::TitleLengthFilter.call(entries, :>, 5)
    when 2
      return Filters::TitleLengthFilter.call(entries, :<=, 5)
    when 3
      puts 'Exiting...'
      return nil
    else
      puts 'Invalid option. Please try again.'
    end
  end
end

# --------- main program ------------
loop do
  main_menu_choice = main_menu
  scraper = HackerNewsScraper.new
  scraper.scrape
  entries = scraper.entries

  case main_menu_choice
  when 1
    puts entries
  when 2
    filter_choice = filters_menu
    result = filter_program(filter_choice, entries)
    puts result
  when 3
    puts 'Exiting...'
    break
  else
    puts 'Invalid option. Please try again.'
  end
end
